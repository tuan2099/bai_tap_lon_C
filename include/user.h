// user.h - Tệp tiêu đề cho lớp User và các hàm liên quan
#ifndef USER_H
#define USER_H

#include <string>
#include <vector>
#include "wallet.h"

// Lớp User - Quản lý thông tin người dùng và các thuộc tính
class User {
public:
    std::string username;                // Tên đăng nhập
    std::string password;                // Mật khẩu (đã băm SHA-256)
    std::string fullName;                // Họ và tên đầy đủ
    std::string email;                   // Địa chỉ email
    std::string phone;                   // Số điện thoại
    std::string role;                    // Vai trò người dùng (admin/user)
    std::string walletID;                // ID của ví người dùng
    bool isAutoGeneratedPassword;        // Đánh dấu nếu mật khẩu được tạo tự động
    std::string oathSecretKey;           // Khóa bí mật cho xác thực OTP

    // Phương thức khởi tạo lớp User
    User(std::string u, std::string p, std::string f, std::string e, std::string ph, 
         std::string r, std::string w, std::string oathKey, bool autoGen = false);
};

// Hàm bảo mật và tiện ích
std::string bytesToHexString(const unsigned char* bytes, size_t len); // Chuyển đổi byte thành chuỗi hexa
std::string generateRandomPassword(int length);                      // Tạo mật khẩu ngẫu nhiên bảo mật
std::string generateOATHSecretKey(int length = 16);                  // Tạo khóa bí mật cho OTP (Base32)
std::string hashPassword(const std::string& password);               // Băm mật khẩu bằng SHA-256
std::string generateSimulatedOTP();                                  // Sinh mã OTP (6 chữ số)
bool verifyOTP(const std::string& secretKey, const std::string& userOtp); // Xác thực OTP với khóa bí mật

// Hàm quản lý người dùng
void saveUsers(const std::vector<User>& users, const std::string& relativeFilename); // Lưu danh sách người dùng vào file
std::vector<User> loadUsers(const std::string& relativeFilename);                     // Tải danh sách người dùng từ file

// Quản lý tài khoản người dùng
User createNewUser(std::vector<User>& users, bool isAdminRegistration = false); // Đăng ký tài khoản người dùng
User* login(std::vector<User>& users);                                         // Đăng nhập người dùng
void changePassword(User& user, std::vector<User>& users);                     // Đổi mật khẩu
void updateProfileUser(User& user, std::vector<User>& users);                      // Cập nhật thông tin cá nhân
void ViewInfoUserbyAdmin(const std::vector<User>& users);                                // Xem danh sách người dùng (chỉ admin)
void EditUserWithAdminRole(std::vector<User>& users);                                  // Chỉnh sửa thông tin người dùng (chỉ admin)

#endif
